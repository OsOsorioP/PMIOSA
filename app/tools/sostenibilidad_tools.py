import random
from langchain_core.tools import tool

@tool
def search_sustainable_practices(crop_type: str, region_characteristics: str) -> str:
    """
    Busca pr√°cticas agr√≠colas sostenibles simuladas adecuadas para un 'crop_type'
    y 'region_characteristics' (ej. tipo de suelo, clima).
    Retorna una lista de pr√°cticas recomendadas.
    """
    print(f"üõ†Ô∏è Herramienta 'search_sustainable_practices' llamada para cultivo: {crop_type}, regi√≥n: {region_characteristics}")
    # Simulaci√≥n
    practices = [
        "Rotaci√≥n de cultivos con leguminosas.",
        "Siembra directa para conservaci√≥n de suelo y agua.",
        "Uso de cubiertas vegetales en invierno.",
        "Manejo integrado de plagas (MIP).",
        "Compostaje de residuos org√°nicos."
    ]

    num_practices = random.randint(2, len(practices))
    return f"Pr√°cticas sostenibles recomendadas para {crop_type} en {region_characteristics}: {'; '.join(random.sample(practices, num_practices))}"

@tool
def assess_practice_impact(practice_name: str, context: str) -> str:
    """
    Eval√∫a el impacto simulado (ambiental, econ√≥mico) de una 'practice_name' agr√≠cola sostenible
    en un 'context' espec√≠fico (ej. reducci√≥n de emisiones, mejora de la biodiversidad).
    Retorna una breve evaluaci√≥n del impacto.
    """
    print(f"üõ†Ô∏è Herramienta 'assess_practice_impact' llamada para pr√°ctica: {practice_name}, contexto: {context}")
    # Simulaci√≥n
    impacts = {
        "Rotaci√≥n de cultivos con leguminosas": "Positivo: Mejora la fertilidad del suelo, reduce necesidad de fertilizantes nitrogenados.",
        "Siembra directa": "Positivo: Reduce erosi√≥n, mejora retenci√≥n de agua, secuestra carbono.",
        "Manejo integrado de plagas (MIP)": "Positivo: Reduce uso de pesticidas, protege polinizadores, menor costo a largo plazo."
    }
    default_impact = "Impacto positivo en la sostenibilidad general, contribuye a la salud del ecosistema agr√≠cola."
    return impacts.get(practice_name, default_impact)

sostenibilidad_tools = [
    search_sustainable_practices,
    assess_practice_impact,
]